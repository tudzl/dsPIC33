/* Microchip Technology Inc. and its subsidiaries.  You may use this software 
 * and any derivatives exclusively with Microchip products. 
 * 
 * THIS SOFTWARE IS SUPPLIED BY MICROCHIP "AS IS".  NO WARRANTIES, WHETHER 
 * EXPRESS, IMPLIED OR STATUTORY, APPLY TO THIS SOFTWARE, INCLUDING ANY IMPLIED 
 * WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY, AND FITNESS FOR A 
 * PARTICULAR PURPOSE, OR ITS INTERACTION WITH MICROCHIP PRODUCTS, COMBINATION 
 * WITH ANY OTHER PRODUCTS, OR USE IN ANY APPLICATION. 
 *
 * IN NO EVENT WILL MICROCHIP BE LIABLE FOR ANY INDIRECT, SPECIAL, PUNITIVE, 
 * INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, COST OR EXPENSE OF ANY KIND 
 * WHATSOEVER RELATED TO THE SOFTWARE, HOWEVER CAUSED, EVEN IF MICROCHIP HAS 
 * BEEN ADVISED OF THE POSSIBILITY OR THE DAMAGES ARE FORESEEABLE.  TO THE 
 * FULLEST EXTENT ALLOWED BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL CLAIMS 
 * IN ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT OF FEES, IF 
 * ANY, THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THIS SOFTWARE.
 *
 * MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE OF THESE 
 * TERMS. 
 */

/* 
 * File:   examples.h
 * Author: 
 * Comments:
 * Revision history: 
 */

// This is a guard condition so that contents of this file are not included
// more than once.  
#ifndef EXAMPLES_H
#define	EXAMPLES_H

#include <xc.h> // include processor files - each processor file is guarded.  

//Many examples in this project define main() and one or more ISRs.
//Only one of these examples can build at one time.
//Comment out one #define below to enable the respective example.

//#define ADC_SINGLE_CONVERSION_EXAMPLE
//#define ADC_WINDOWED_CONVERSIONS_EXAMPLE
//#define ADC_INTEGRATION_OF_THE_MULTIPLE_SAMPLES_EXAMPLE
//#define ADC_OVERSAMPLING_EXAMPLE
//#define ADC_COMPARATOR_EXAMPLE
//#define ADC_MULTIPLE_CHANNELS_SCAN_EXAMPLE
//#define ADC_SECOND_ORDER_LOW_PASS_FILTER_EXAMPLE

//#define CLC_FSK_MODULATION_OF_UART_DATA_EXAMPLE

//#define CRC_SOFTWARE_ROUTINE_TO_CALCULATE_THE_NON_DIRECT_INITIAL_VALUE
//#define CRC_CALCULATING_THE_NON_DIRECT_INITIAL_VALUE_MOD_BIT_0
//#define CRC_ROUTINE_TO_GET_THE_FINAL_CRC_RESULT_IN_LEGACY_MODE_MOD_BIT_0
//
//#define CRC_SMBUS_8_BIT_POLYNOMIAL_WITH_32_BIT_DATA_BIG_ENDIAN_MOD_BIT_1
//#define CRC_16_16_BIT_DATA_WITH_16_BIT_POLYNOMIAL_LITTLE_ENDIAN_MOD_BIT_1
//#define CRC_32_32_BIT_POLYNOMIAL_WITH_32_BIT_DATA_LITTLE_ENDIAN_MOD_BIT_1
//#define CRC_DATA_WIDTH_SWITCHING_32_BIT_POLYNOMIAL_LITTLE_ENDIAN_MOD_BIT_1

//#define DAC_WITH_SLOPE_COMPENSATION_EXAMPLE
//#define DAC_SETTINGS_FOR_HYSTERETIC_MODE_EXAMPLE

//#define DMA_ONE_SHOT_TRANSFER_EXAMPLE
//#define DMA_REPEATED_ONE_SHOT_TRANSFER_EXAMPLE
//#define DMA_CONTINUOUS_TRANSFER_EXAMPLE
//#define DMA_REPEATED_CONTINUOUS_TRANSFER_EXAMPLE
//#define DMA_FIXED_TO_BLOCK_CONTINUOUS_TRANSFER_EXAMPLE

//#define DMT_CLEARING_BEFORE_COUNT_MATCH_EXAMPLE
//#define DMT_CLEARING_AFTER_DMT_EVENT_EXAMPLE

//#define I2C_HOST_TRANSMISSION_7_BIT_ADDRESS
//#define I2C_HOST_TRANSMISSION_10_BIT_ADDRESS
//#define I2C_HOST_RECEPTION_7_BIT_ADDRESS
//#define I2C_HOST_RECEPTION_10_BIT_ADDRESS
//#define I2C_CLIENT_RECEPTION_7_BIT_ADDRESS
//#define I2C_CLIENT_RECEPTION_10_BIT_ADDRESS
//#define I2C_CLIENT_TRANSMISSION_7_BIT_ADDRESS
//#define I2C_CLIENT_TRANSMISSION_10_BIT_ADDRESS

//#define IDLE_MODE_WAKE_USING_TIMER1
//#define SLEEP_MODE_WAKE_USING_EXTERNAL_INTERRUPT
//#define PMD_SCCP_DISABLE_EXAMPLE

//#define PTG_SINGLE_STEP_DEMONSTRATION_PROGRAM
//#define PTG_GENERATING_PHASE_SHIFTED_WAVEFORMS
//#define PTG_INTERLEAVED_SAMPLING_STEP_COMMAND_PROGRAM
//#define PTG_RATIOED_SAMPLING_STEP_COMMAND_PROGRAM

//#define PWM_SIX_STEP_PWM_SCHEME_1_EXAMPLE
//#define PWM_SIX_STEP_PWM_SCHEME_2_EXAMPLE
//#define PWM_SIX_STEP_PWM_SCHEME_3_EXAMPLE
//#define PWM_THREE_PHASE_SINUSOIDAL_PMSM_ACIM_MOTOR_CONTROL_EXAMPLE
//#define PWM_COMPLEMENTARY_PWM_OUTPUT_MODE_EXAMPLE
//#define PWM_CYCLE_BY_CYCLE_CURRENT_LIMIT_MODE_EXAMPLE
//#define PWM_EXTERNAL_PERIOD_RESET_MODE_EXAMPLE

//#define QEI_HOMING_INITIALIZATION_EXAMPLE

//#define SCCP_INPUT_CAPTURE_MODE_EVERY_RISING_EDGE_EXAMPLE
//#define SCCP_DUAL_EDGE_BUFFERED_COMPARE_MODE_EXAMPLE
//#define SCCP_SYNCHRONOUS_OPERATION_16_BIT_DUAL_TIMER_MODE_EXAMPLE
//#define SCCP_TIMER_TRIGGERED_OPERATION_16_BIT_DUAL_TIMER_MODE_EXAMPLE

//#define SENT_ASYNCHRONOUS_TRANSMISSION
//#define SENT_SYNCHRONOUS_TRANSMISSION
//#define SENT_RECEPTION
//#define SENT_TRANSMISSION_SPC_PULSE_RECEPTION
//#define SENT_RECEPTION_SPC_PULSE_TRANSMISSION

//#define SPI_HOST_BLOCKING_OPERATION
//#define SPI_HOST_INTERRUPT_DRIVEN_OPERATION
//#define SPI_CLIENT_INTERRUPT_DRIVEN_OPERATION

//#define TIMER1_SYNCHRONOUS_CLOCK_COUNTER_EXAMPLE
//#define TIMER1_SYNCHRONOUS_EXTERNAL_COUNTER_EXAMPLE
//#define TIMER1_GATED_TIMER_EXAMPLE
//#define TIMER1_ASYNCHRONOUS_COUNTER_EXAMPLE


#define UART_TRANSMISSION_WITH_MCP2221
//#define UART_TRANSMISSION_WITH_INTERRUPTS
//#define UART_RECEPTION_WITH_INTERRUPTS
//#define UART_ADDRESS_DETECT_TRANSMISSION
//#define UART_ADDRESS_DETECT_RECEPTION

//#define WDT_RUN_MODE_EXAMPLE
//#define WDT_SLEEP_MODE_EXAMPLE
//#define WDT_WINDOWED_CLEAR_EXAMPLE

//This example does not define main(), but it defines specific configuration
//bits that may not be desired outside of the context of the example.
//#define WDT_CONFIGURATION_BITS_EXAMPLE


#ifdef	__cplusplus
extern "C" {
#endif /* __cplusplus */

    // TODO If C++ is being used, regular C code needs function names to have C 
    // linkage so the functions can be used by the c code. 

#ifdef	__cplusplus
}
#endif /* __cplusplus */

#endif	/* EXAMPLES_H */

